@model ppij_web_aplikacija.Models.Instrukcije.InstrukcijaModel

<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.css" />
    <script src="http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.js"></script>
</head>
<body class="bootstrap-fix">
    @using (Html.BeginForm())
    {
        <div class="container">
            <div class="row">
                <div class="col-md-3 col-sm-2 col-xs-0"></div>
                <div class="col-md-6 col-sm-8 col-xs-12" style="text-align:center">
                    <hr />
                    <h3><b>Odaberi instruktora:</b></h3>
                    <hr />
                    <h4>@Model.Predmet.naziv_predmet</h4>
                    <hr />
                </div>
            </div>
            <div class="row">
                <div class="col-md-3 col-sm-2 col-xs-0"></div>
                <div class="col-md-3 col-sm-4 col-xs-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Datum)
                        @Html.EditorFor(model => model.Datum, new { htmlAttributes = new { id = "date", @class = "form-control" } })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.OdabraniSatID)
                        @Html.DropDownListFor(m => Model.OdabraniSatID, Model.Sati, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.OdabranoTrajanjeID)
                        @Html.DropDownListFor(m => Model.OdabranoTrajanjeID, Model.Trajanja, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-3 col-sm-4 col-xs-6">
                    <div class="form-group">
                        @Html.LabelFor(m => Model.Ime)
                        @Html.EditorFor(m => Model.Ime, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => Model.Prezime)
                        @Html.EditorFor(m => Model.Prezime, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => Model.Ocjena)
                        @Html.EditorFor(m => Model.Ocjena, new { htmlAttributes = new { @class = "form-control", min = "0", max = "5", step = "0.1" } })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => Model.BrojInstrukcija)
                        @Html.EditorFor(m => Model.BrojInstrukcija, new { htmlAttributes = new { @class = "form-control", min = "0" } })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3 col-sm-2 col-xs-0"></div>
                <div class="col-md-6 col-sm-8 col-xs-12" style="text-align:center">
                    <hr />
                    <button class="btn btn-primary" value="Traži" style="width:20em">
                        Traži
                    </button>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-2"></div>
                <div class="col-xs-8">
                    <hr />
                    <table id="instrukcije" class="tablesorter table table-hover table-bordered">
                        <thead>
                            <tr>
                                <th style="text-align:center; vertical-align:middle">Ime</th>
                                <th style="text-align:center; vertical-align:middle">Prezime</th>
                                <th style="text-align:center; vertical-align:middle">Ocjena</th>
                                <th style="text-align:center; vertical-align:middle">Cijena (KN)</th>
                                <th style="text-align:center; vertical-align:middle">Broj instrukcija</th>
                                <th style="text-align:center; vertical-align:middle">Lokacija</th>
                                <th style="text-align:center; vertical-align:middle">Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var opis in Model.Opisi)
                            {
                                <tr class=@if(opis.Status == "SLOBODAN") { <text> info</text> }
                                    @if (opis.Status == "POSLAN") { <text> success</text> }
                                    @if (opis.Status == "NEDOSTUPAN" || opis.Status == "REZERVIRAN") { <text> warning</text> }
                                    @if (opis.Status == "OTKAZAN") { <text> danger</text> }>
                                    <td style="text-align:center; vertical-align:middle">@opis.Instruktor.ime_osoba</td>
                                    <td style="text-align:center; vertical-align:middle">@opis.Instruktor.prezime_osoba</td>
                                    <td style="text-align:center; vertical-align:middle">@opis.Ocjena</td>
                                    <td style="text-align:center; vertical-align:middle">@opis.Cijena</td>
                                    <td style="text-align:center; vertical-align:middle">@opis.BrojInstrukcija</td>
                                    <td style="text-align:center; vertical-align:middle;display: flex;">
                                        @Html.DropDownList("lokacija:" + opis.Instruktor.ID_osoba, opis.SelectListLokacija, new { @class = "form-control" })
                                        <button style="margin-left: 5px;" type="button" class="btn btn-warning btn-xs karta-trigger" data-toggle="modal" data-target="#kartaModal" value="@opis.Instruktor.ID_osoba">karta</button>
                                    </td>
                                    @if (opis.Status == "POSLAN")
                                    {
                                        <td>
                                            <div style="text-align:center;">
                                                <button class="btn btn-success" disabled="disabled">
                                                    Poslan
                                                </button>
                                            </div>
                                        </td>
}
                                    else if (opis.Status == "SLOBODAN")
                                    {
                                        <td>
                                            <div style="text-align:center;">
                                                <button class="btn btn-info" type="submit" name="naredba" value=@(opis.Instruktor.ID_osoba)>
                                                    Slobodan
                                                </button>
                                            </div>
                                        </td>
}
                                    else if (opis.Status == "NEDOSTUPAN")
                                    {
                                        <td>
                                            <div style="text-align:center;">
                                                <button class="btn btn-warning" disabled="disabled">
                                                    Nedostupan
                                                </button>
                                            </div>
                                        </td>
}
                                    else if (opis.Status == "REZERVIRAN")
                                    {
                                        <td>
                                            <div style="text-align:center;">
                                                <button class="btn btn-warning" disabled="disabled">
                                                    Rezerviran
                                                </button>
                                            </div>
                                        </td>
}
                                    else if (opis.Status == "OTKAZAN")
                                    {
                                        <td>
                                            <div style="text-align:center;">
                                                <button class="btn btn-danger" disabled="disabled">
                                                    Otkazan
                                                </button>
                                            </div>
                                        </td>
}
                                </tr>
}
                        </tbody>
                    </table>
                </div>

            </div>
        </div>


    <!-- Modal -->
        <div id="kartaModal" class="modal fade" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Karta</h4>
                    </div>
                    <div class="modal-body" style="height:293px;">
                        <div id="mapid" style="height:100%;"></div>
                        
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-info" data-dismiss="modal">Zatvori</button>
                    </div>
                </div>

            </div>
        </div>

    }





</body>
</html>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
        $(document).ready(function () {
            $('#date').datepicker({
                dateFormat: "dd/MM/yy",
                changeMonth: true,
                changeYear: true,
                minDate: 1,
                yearRange: "-0:+1"
            });

        });
    </script>

    @Scripts.Render("~/bundles/jquery_tablesorter")
    @*@Styles.Render("~/Content/css_jquery_tablesorter")*@

    <script type="text/javascript">
        $(document).ready(function () {
            $("#instrukcije").tablesorter();
        }
    );
    </script>
    <script>
        $('.karta-trigger').on('click', function (e) {
            $modalBody = $(".modal-body");
            idOsoba = $(this).val();


            $.ajax({
                type: "GET",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                url: '/Profil/MapData',
                async: false,
                data: { idOsoba: idOsoba },
                success: function (res) {
                    if (!res) {
                        //internal error
                        alert("Greška pri učitavanju lokacije.");
                    }
                    else {
                        //res holds value
                        mojelokacijeInit(res);
                        setTimeout(refreshmap, 250);

                    }
                }
            });


        });


        $('#kartaModal').on('hidden.bs.modal', function () {
            clearmap();
        });
    </script>




<script id="mapscript">
                var maxIdkarte = 0;
                var markeriArray=[];
                function makeStruct(names) {
                    var names = names.split(' ');
                    var count = names.length;
                    function constructor() {
                        for (var i = 0; i < count; i++) {
                            this[names[i]] = arguments[i];
                        }
                    }
                    return constructor;
                }

                var idmarkerKarta = makeStruct("id marker");
                var popismarkeranakarti = [];


                var mymap = L.map('mapid').setView([45.049222, 16.280702], 6);
                L.tileLayer('http://{s}.mqcdn.com/tiles/1.0.0/map/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="http://osm.org/copyright" title="OpenStreetMap" target="_blank">OpenStreetMap</a> contributors | Tiles Courtesy of <a href="http://www.mapquest.com/" title="MapQuest" target="_blank">MapQuest</a> <img src="http://developer.mapquest.com/content/osm/mq_logo.png" width="16" height="16">',
                    subdomains: ['otile1','otile2','otile3','otile4']
                }).addTo(mymap);
                mymap.addEventListener("click", kartaClick);

                function refreshmap(){
                    mymap.invalidateSize();
                }


                function clearmap() {

                    for (var i = 0; i < markeriArray.length; i++) {
                        mymap.removeLayer(markeriArray[i]);
                    }
                }


                function kartaClick(e){
                    maxIdkarte += 1;
                    marker = L.marker([e.latlng.lat, e.latlng.lng], {title: "Lokacija šif. "+maxIdkarte} ).bindPopup("<p>Nedefinirano</p></br><input type='button' value='Ukloni lokaciju' class='marker-delete-button'/>");
                    marker.on("popupopen", onPopupOpen);
                    popismarkeranakarti.push(new idmarkerKarta(maxIdkarte, marker));
                    var mcontent = marker.getPopup().getContent();
                    mcontent = mcontent.substr(3);
                    mcontent = mcontent.substr(0, mcontent.indexOf("<"));
                    
                    marker.addTo(mymap);
                }

                function onPopupOpen() {
                    var tempMarker = this;
                    $(".marker-delete-button:visible").on("click", function () {
                        for(var i = 0; i<popismarkeranakarti.length;i++){
                            if(popismarkeranakarti[i].marker == tempMarker){
                                var element = document.getElementById("lilok"+popismarkeranakarti[i].id);
                                element.parentElement.removeChild(element);
                                popismarkeranakarti.splice(i, 1);
                                break;
                            }
                        }
                        mymap.removeLayer(tempMarker);
                    });
                }


                function mojelokacijeInit(listamarkera){
                    for(var i = 0; i < listamarkera.lokacije.length; i++ ){
                        if(listamarkera.lokacije[i].id > maxIdkarte){
                            maxIdkarte = listamarkera.lokacije[i].id;
                        }
                        marker = L.marker([listamarkera.lokacije[i].lat, listamarkera.lokacije[i].lon], {title: "Lokacija šif. " + listamarkera.lokacije[i].id} ).bindPopup("<p>" + listamarkera.lokacije[i].opis + "</p>");
                        
                        popismarkeranakarti.push(new idmarkerKarta(listamarkera.lokacije[i].id, marker));
                        marker.addTo(mymap);
                        markeriArray.push(marker);
                    }
                }

</script>


}