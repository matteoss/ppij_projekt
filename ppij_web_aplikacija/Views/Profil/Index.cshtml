@model ppij_web_aplikacija.Models.PostavkeModel
<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <script type="text/javascript" src="http://code.jquery.com/jquery.min.js"></script>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.css" />
    <script src="http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.js"></script>
    <link href="~/Content/predmeti.css" rel="stylesheet" />
    <link href="~/Content/profil.css" rel="stylesheet" />
    <script src="~/Content/sweetalert/dist/sweetalert.min.js"></script>
    <link href="~/Content/sweetalert/dist/sweetalert.css" rel="stylesheet" />

</head>
<body>
    <div class="container">
        <div class=" tabbable mali-razmak-gore" role="tablist">



            <ul class="nav nav-tabs" id="myTab">
                <!--Popis tabova-->
                <li role="presentation" class="active"><a href="#tab1" aria-controls="tab1" role="tab" data-toggle="tab" id="dogovoreneinstrukcije">Moje dogovorene instrukcije</a></li>
                <li role="presentation"><a href="#tab2" aria-controls="tab2" role="tab" data-toggle="tab">Nudim instrukcije</a></li>
                <li role="presentation"><a href="#tab3" aria-controls="tab3" role="tab" data-toggle="tab" onclick="setTimeout(refreshmap, 250)">Postavke profila</a></li>
                <li role="presentation"><a href="#tab4" aria-controls="tab4" role="tab" data-toggle="tab">Promjena lozinke</a></li>
            </ul>

            <script>
                function nots() {
                    $.ajax({
                        url: '/Profil/notification',
                        type: 'GET',
                        dataType: 'text',
                        async: false,
                        success: function (data) {
                            //document.getElementById("test123").innerHTML = data;
                            var jsonz = JSON.parse(data);
                            var zbroj = jsonz.klijent + jsonz.instruktor;
                            if (zbroj == '0') {
                                $('#dogovoreneinstrukcije').html('Moje dogovorene instrukcije');
                            }
                            else {
                                $('#dogovoreneinstrukcije').html('Moje dogovorene instrukcije <b style="color:red;">(' + zbroj + ')</b>');
                                if(jsonz.klijent == 0){
                                    $('#instrukcijeklijent').html('Moje dogovorene instrukcije kao klijent');
                                }
                                else{
                                    $('#instrukcijeklijent').html('Moje dogovorene instrukcije kao klijent <b style="color:red;">(' + jsonz.klijent+ ')</b>');
                                }
                                if(jsonz.instruktor == 0){
                                    $('#instrukcijeinstruktor').html('Moje dogovorene instrukcije kao instruktor');
                                }
                                else{
                                    $('#instrukcijeinstruktor').html('Moje dogovorene instrukcije kao instruktor <b style="color:red;">(' + jsonz.instruktor+ ')</b>');
                                }
                            }
                        },
                        complete: function () {
                            setTimeout(nots, 5000);
                        }
                    });
                }
            </script>

            <div class="tab-content">


                <!--Moje dogovorene instrukcije tab-->
                <div class="tab-pane active top-buffer" role="tabpanel" id="tab1">

                    <div class=" tabbable " style="margin-top:-40px" role="tablist">
                        <ul class="nav nav-tabs subtabs" id="myTabDogovoreno">
                            <!--Popis subtabova-->
                            <li role="presentation" class="active"><a href="#tab11" aria-controls="tab11" role="tab" data-toggle="tab" id="instrukcijeklijent">Moje dogovorene instrukcije kao klijent</a></li>
                            <li role="presentation"><a href="#tab12" aria-controls="tab12" role="tab" data-toggle="tab" id="instrukcijeinstruktor">Moje dogovorene instrukcije kao instruktor</a></li>
                        </ul>


                        @{var i = 0;}
                        <div class="tab-content">

                            <!--tablica kao klijent-->
                            <div class="tab-pane active top-buffer" role="tabpanel" id="tab11">

                                @using (Html.BeginForm()) {
                                    <fieldset>
                                        <form class="form-horizontal " method="post">
                                            <div >
                                                <div>
                                                    <div class=" prihvati-lijevo">
                                                        <input onclick="dodajindex(11);" type="submit" class="btn btn-default prihvati" style="font-weight: bold;" value="Prihvati izmjene &raquo;" /> <br />
                                                    </div>

                                                    <table id ="dogovori1" class="table-bordered tablesorter table table-striped ">
                                                        <thead>
                                                            <tr>
                                                                <th>Datum i vrijeme</th>
                                                                <th>Trajanje</th>
                                                                <th>Predmet</th>
                                                                <th>Lokacija</th>
                                                                <th>Ime</th>
                                                                <th>Prezime</th>
                                                                <th>Status</th>
                                                                <th>Viđeno</th>
                                                                <th>Odustani</th>
                                                            </tr>
                                                        </thead>

                                                        <tbody>
                                                            @for (i = 0; i < Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent.Count; i++) {
                                                                <tr>
                                                                    <td >
                                                                        @Html.HiddenFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.ID_dogovor_termin)
                                                                        @Html.DisplayFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.datum_dogovor)
                                                                    </td>
                                                                    <td >
                                                                        @Html.DisplayFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.trajanje)h
                                                                    </td>
                                                                    <td >
                                                                        @Html.DisplayFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].predmet)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].lokacija.opis)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].ime)
                                                                    </td>
                                                                    <td >
                                                                        @Html.DisplayFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].prezime)
                                                                    </td>
                                                                    <!-- SVE ZA OCIJENE + TEKST STATUSA INSTRUKCIJA-->
                                                                    <td >
                                                                        @if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.datum_dogovor <= @DateTime.Now) {
                                                                            if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 1 || @Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 11) {
                                                                         
                                                                                <div >
                                                                                    <label for="dogovorenitermklijentOcijena">Ocijenite: </label>
                                                                                    @Html.DropDownListFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_ocijena, new System.Web.Mvc.SelectList(ppij_web_aplikacija.Models.Instrukcije.Konstante.Ocjene.ocjeneTekst, "vrijednost", "tekst", Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_ocijena), new { id = "dogovorenitermklijentOcijena" })

                                                                                </div>
                                                                            } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 10) {
                                                                                <p>Nije odgovoreno</p>
                                                                            } else {
                                                                                <p>Odustano</p>
                                                                            }
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 1) {
                                                                            <p><b style="color:green;">Termin potvrđen</b></p>
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 2) {
                                                                            <p><b>Zatražili ste odustajanje</b></p>
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 3) {
                                                                            <p><b style="color:red;">Instruktor je otkazao</b></p>
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 10) {
                                                                            <p><b style="color:green;">Poslan zahtjev</b></p>
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 11) {
                                                                            <p><b style="color:green;">Instruktor je potvrdio</b></p>
                                                                        } else {
                                                                            <p>Odustano</p>
                                                                        }
                                                                    </td>
                                                                    <!--SEEN LABEL-->
                                                                    <td>
                                                                        @if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 3 || @Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 11) {
                                                                            <input id="seenid@(i)" type="checkbox" class="mycheck" name="seenid@(i)" onclick="seen(@(i));" />
                                                                            <label class="myseenlabel" for="seenid@(i)">OK</label>
                                                                            @Html.HiddenFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].seen, new { id = "seenidstore" + i })
                                                                        } else {
                                                                            <input id="seenid@(i)" type="checkbox" class="mycheck" name="seenid@(i)" onclick="seen(@(i));" checked disabled />
                                                                            <label class="myseenlabel" for="seenid@(i)">Viđeno</label>
                                                                            @Html.HiddenFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].seen, new { id = "seenidstore" + i })
                                                                        }
                                                                    </td>
                                                                    <!-- SVE OPCIJE ZA ODUSTAJANJE-->
                                                                    <td >
                                                                        @if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 0 || @Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 20) {
                                                                            <p>Odustano</p>
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 2) {
                                                                            <p><b>Odustano</b></p>
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 3) {
                                                                            <p></p>
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 1 || @Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 11 || @Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 10) {

                                                                            if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.datum_dogovor < @DateTime.Now) {
                                                                                if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 10) {
                                                                                    <p></p>
                                                                                } else {
                                                                                    <p>Prisustvovano</p>
                                                                                }
                                                                            } else {
                                                                                <input id="odustani@(i)" type="checkbox" class="mycheck" name="odustani@(i)" onclick="odustani(@(i));" />
                                                                                <label class="myodustanilabel" for="odustani@(i)">Odustani</label>
                                                                                @Html.HiddenFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].odustani, new { id = "hiddenodustani" + i })
                                                                            }
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].termin.dogovor_status == 10) {
                                                                            <p><b>Zahtjev poslan</b></p>
                                                                        }
                                                                    </td>

                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>


                                                </div>
                                            </div>
                                            @Html.HiddenFor(model => model.trenutniTab, new { id = "trenutniTab11" })
                                            <div class=" mali-razmak-gore prihvati-lijevo">
                                                <input onclick="dodajindex(11);" type="submit" class="btn btn-default prihvati " style="font-weight: bold;" value="Prihvati izmjene &raquo;" /><br />
                                            </div>
                                        </form>
                                    </fieldset>

                                }
                            </div>

                            <!--tablica kao instruktor-->
                            <div class="tab-pane top-buffer" role="tabpanel" id="tab12">
                                @using (Html.BeginForm()) {
                                    <fieldset>
                                        <form class="form-horizontal " method="post">
                                            <div >
                                                <div>
                                                    <div class=" prihvati-lijevo">
                                                        <input onclick="dodajindex(12);" type="submit" class="btn btn-default prihvati" style="font-weight: bold;" value="Prihvati izmjene &raquo;" /> <br />
                                                    </div>

                                                    <table class="table-bordered tablesorter table table-striped " id="tabledatainstruktori">
                                                        <thead>
                                                            <tr>
                                                                <th >Datum i vrijeme</th>
                                                                <th >Trajanje</th>
                                                                <th>Predmet</th>
                                                                <th>Lokacija</th>
                                                                <th >Ime</th>
                                                                <th >Prezime</th>
                                                                <th >Status</th>
                                                                <th >Viđeno</th>
                                                                <th >Odustani</th>
                                                            </tr>
                                                        </thead>

                                                        <tbody>
                                                            @for (var e = 0; e < Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor.Count; e++) {
                                                                <tr>
                                                                    <td  id="pocetakinstruktor@(i)">
                                                                        @Html.HiddenFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.ID_dogovor_termin)
                                                                        @Html.DisplayFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.datum_dogovor)
                                                                    </td>
                                                                    <td  id="trajanjeinstruktor@(i)">
                                                                        @Html.DisplayFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.trajanje)h
                                                                    </td>
                                                                    <td >
                                                                        @Html.DisplayFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].predmet)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_klijent[i].lokacija.opis)
                                                                    </td>
                                                                    <td>
                                                                        @Html.DisplayFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].ime)
                                                                    </td>
                                                                    <td >
                                                                        @Html.DisplayFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].prezime)
                                                                    </td>
                                                                    <!-- SVE ZA TEKSTOVE STATUSA-->
                                                                    <td >
                                                                        @if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.datum_dogovor < @DateTime.Now) {
                                                                            if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.dogovor_status == 1 || @Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.dogovor_status == 11) {
                                                                                <p>Prisustvovano</p>
                                                                            } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.dogovor_status == 10) {
                                                                                <p><b style="color:red;">Termin je prošao</b></p>
                                                                            } else {
                                                                                <p>Otkazano</p>
                                                                            }
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.dogovor_status == 1 || @Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.dogovor_status == 11) {
                                                                            <p><b style="color:green;">Termin je potvrđen</b></p>
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.dogovor_status == 2) {
                                                                            <p><b style="color:red;">Klijent je odustao</b></p>
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.dogovor_status == 3) {
                                                                            <p><b>Zatražili ste odustajanje</b></p>
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.dogovor_status == 10) {
                                                                            <p><b style="color:green;">Čeka se Vaša potvrda</b></p>
                                                                        } else {
                                                                            <p>Otkazano</p>
                                                                        }
                                                                    </td>
                                                                    <!--SEEN LABEL-->
                                                                    <td>
                                                                        @if ((@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.datum_dogovor < @DateTime.Now && @Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.dogovor_status == 10) || @Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.dogovor_status == 2) {
                                                                            <input id="seenid@(i)" type="checkbox" class="mycheck" name="seenid@(i)" onclick="seen(@(i));" />
                                                                            <label class="myseenlabel" for="seenid@(i)">OK</label>
                                                                            @Html.HiddenFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].seen, new { id = "seenidstore" + i })
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.dogovor_status == 10) {
                                                                            <input id="seenid@(i)" type="checkbox" class="mycheck" name="seenid@(i)" onclick="seen(@(i));" />
                                                                            <label class="myacceptlabel" for="seenid@(i)">Potvrdi</label>
                                                                            @Html.HiddenFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].seen, new { id = "seenidstore" + i })
                                                                        } else {
                                                                            <input id="seenid@(i)" type="checkbox" class="mycheck" name="seenid@(i)" onclick="seen(@(i));" checked disabled />
                                                                            <label class="myseenlabel" for="seenid@(i)">Viđeno</label>
                                                                            @Html.HiddenFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].seen, new { id = "seenidstore" + i })
                                                                        }
                                                                    </td>
                                                                    <!-- SVE OPCIJE ZA ODUSTAJANJE-->
                                                                    <td >
                                                                        @if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.datum_dogovor < @DateTime.Now) {
                                                                            <p></p>
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.dogovor_status == 0) {
                                                                            <p>Odustano</p>
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.dogovor_status == 2) {
                                                                            <p><b>Odustano</b></p>
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.dogovor_status == 3) {
                                                                            <p>Odustano</p>
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.dogovor_status == 1 || @Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.dogovor_status == 11) {
                                                                            if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.datum_dogovor < @DateTime.Now) {
                                                                                <p></p>
                                                                            } else {
                                                                                <input id="odustani@(i)" type="checkbox" class="mycheck" name="odustani@(i)" onclick="odustani(@(i));" />
                                                                                <label class="myodustanilabel" for="odustani@(i)">Odustani</label>
                                                                                @Html.HiddenFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].odustani, new { id = "hiddenodustani" + i })
                                                                            }
                                                                        } else if (@Model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].termin.dogovor_status == 10) {
                                                                            <input id="odustani@(i)" type="checkbox" class="mycheck" name="odustani@(i)" onclick="odustani(@(i));" />
                                                                            <label class="myodustanilabel" for="odustani@(i)">Odustani</label>
                                                                            @Html.HiddenFor(model => model.mojeVlastiteInstrukcije.dogovoreni_termini_kao_instruktor[e].odustani, new { id = "hiddenodustani" + i })
                                                                        }
                                                                    </td>

                                                                </tr>
                                                                { i++; }
                                                            }
                                                        </tbody>
                                                    </table>

                                                </div>
                                            </div>
                                            @Html.HiddenFor(model => model.trenutniTab, new { id = "trenutniTab12" })
                                            <div class=" mali-razmak-gore prihvati-lijevo">
                                                <input onclick="dodajindex(12);" type="submit" class="btn btn-default prihvati" style="font-weight: bold;" value="Prihvati izmjene &raquo;" /><br />
                                            </div>
                                        </form>
                                    </fieldset>

                                }
                            </div>
                        </div>
                    </div>
                </div>







                    <!--Nudim instrukcije tab-->
                    <div class="tab-pane  top-buffer" role="tabpanel" id="tab2">
                        @if (@ViewBag.razinaPrava == 1 || @ViewBag.razinaPrava == 0) {



                        <div class=" tabbable " style="margin-top:-40px" role="tablist">
                                <ul class="nav nav-tabs subtabs" id="myTabTermini">
                                    <!--Popis subtabova-->
                                    <li role="presentation" class="active"><a href="#tab21" aria-controls="tab21" role="tab" data-toggle="tab">Moji predmeti</a></li>
                                    <li role="presentation"><a href="#tab22" aria-controls="tab22" role="tab" data-toggle="tab">Moji termini</a></li>
                                </ul>


                                <div class="tab-content">

                                    <div class="tab-pane active top-buffer table-responsive" role="tabpanel" id="tab21">
                                        <table id="predmeti1" class="table tablesorter table-condensed">
                                            <thead>
                                                <tr>
                                                    <th>Naziv predmeta</th>
                                                    <th>Cijena</th>
                                                    <th>Ukloni</th>
                                                    <th>Uredi cijenu</th>
                                                </tr>
                                            </thead>
                                            <tbody id="predmeti">
                                                @foreach (var predmet in Model.mojeVlastiteInstrukcije.mojiPredmeti) {
                                                <tr>
                                                        <td>@Html.Raw(predmet.nazivPredmet)</td>
                                                        <td>@Html.Raw(predmet.cijenaPredmet.ToString()) HRK</td>
                                                        <td><button class="btn btn-sm btn-danger Delete" value="@Html.DisplayName(predmet.IDpredmet.ToString())">Ukloni</button></td>
                                                        <td class="ajax-load-td">
                                                            <button class="btn btn-sm btn-warning Edit" value="@Html.DisplayName(predmet.IDpredmet.ToString())">Uredi</button><div class="ajax-load"><img class="img-responsive" src="~/Content/Images/ajax_load.gif" /></div>
                                                        </td>
                                                    </tr>
                                            }
                                            </tbody>
                                        </table>

                                        <div class="col-md-2 mali-razmak-gore">
                                            <button class="btn btn-primary dodajPostojeci" style="width:200px;">Dodaj postojeći predmet</button><br />
                                            <button class="btn btn-success dodajNovi" style="width:200px;">Stvori novi predmet</button>
                                        </div>

                                    </div>



                                    <div class="tab-pane top-buffer" role="tabpanel" id="tab22">
                                        @using (Html.BeginForm()) {
                                        <fieldset>
                                                <form class="form-horizontal " method="post">
                                                    <div >
                                                        <h3>Odaberite termine u kojima želite davati instrukcije</h3>
                                                        <input onclick="addterminmodel(22);" type="submit" class="btn btn-default prihvati" style="float:right" value="Promjeni &raquo;" /> <br />
                                                    </div>
                                                    <div >
                                                        <table id="termini" class="table-bordered tablesorter table table-striped ">
                                                            <thead>
                                                                <tr>
                                                                    <th>sat  </th>
                                                                    <th>PON</th>
                                                                    <th>UTO</th>
                                                                    <th>SRI</th>
                                                                    <th>ČET</th>
                                                                    <th>PET</th>
                                                                    <th>SUB</th>
                                                                    <th>NED</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody id="tableT"></tbody>
                                                        </table>
                                                    </div>
                                                    @Html.HiddenFor(model => model.mojeVlastiteInstrukcije.mojiTermini, new { id = "hiddenstateid" })
                                                    @Html.HiddenFor(model => model.trenutniTab, new { id = "trenutniTab22" })

                                                    <div class="mali-razmak-gore">
                                                        <input onclick="addterminmodel(22);" type="submit" class="btn btn-default prihvati" style="float:right" value="Promjeni &raquo;" /> <br />
                                                    </div>
                                                </form>
                                            </fieldset>
                                    }
                                    </div>


                                </div>
                            </div>

                    } else if (@ViewBag.razinaPrava == 2) {
                        <p>Ukoliko želite biti instruktor odaberite opciju "Želim biti instruktor" u Postavkama profila</p>
                    }
                    </div>




                    <!--Postavke profila tab-->
                    <div class="tab-pane top-buffer" role="tabpanel" id="tab3">
                        <h3>Postavke profila</h3>
                        @using (Html.BeginForm()) {

                        <fieldset>
                                <form class="form-horizontal " method="post">

                                    <div class="row">
                                        <label class="col-md-3 control-label" for="jeinstruktor">
                                            <mark>Želim biti instruktor</mark>
                                        </label>
                                        <div id="jeinstruktor" class="col-md-6">
                                            @Html.CheckBoxFor(model => model.ostalePostavke.instruktor, new { id = "zelimBitiInstruktorID", @onclick = "provjeriJeLiMoguce(this)" })
                                        </div>
                                    </div>
                                            @Html.HiddenFor(model => model.mojeVlastiteInstrukcije.MojeLokacijeJson, new { id = "jsonlokacije" })
                                    <div class="row">
                                        <div class="col-md-5">
                                            <h4>Uredi lokacije</h4>
                                            <div id="mapid"></div>
                                        </div>
                                        <div class="col-md-4" style="height:320px; overflow-y:auto;">
                                            <h4>Uredi opis lokacija</h4>
                                            <ul id="popislokacija"></ul>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-2 mali-razmak-gore">
                                            <input onclick="dodajlokacijeumodel(3);" type="submit" class="btn btn-default prihvati" value="Promjeni &raquo;" /> <br />
                                        </div>
                                    </div>
                                            @Html.HiddenFor(model => model.trenutniTab, new { id = "trenutniTab3" })
                                </form>
                            </fieldset>
                    }
                    </div>




                    <!--Promjena lozinke tab-->
                    <div class="tab-pane" role="tabpanel" id="tab4">
                        <h3>Promjena lozinke</h3>
                                            @using (Html.BeginForm()) {
                        @Html.ValidationSummary(true)
                        <fieldset>
                                <form class="form-horizontal " method="post">

                                    <div class="form-group">
                                        <label class="col-md-3 control-label" for="promjena_lozinke_stara">
                                            <mark>Stara lozinka</mark>
                                        </label>
                                        <div id="promjena_lozinke_stara" class="col-md-5">
                                            @Html.EditorFor(model => model.changePassword.OldPassword)
                                            @Html.ValidationMessageFor(model => model.changePassword.OldPassword)
                                            @Html.ValidationMessage("error_old_password")
                                        </div>
                                    </div>
                                    <br />

                                    <div class=" form-group">
                                        <label class="col-md-3 control-label" for="promjena_lozinke_nova">
                                            <mark>Nova lozinka</mark>
                                        </label>
                                        <div id="promjena_lozinke_nova" class="col-md-6">
                                            @Html.PasswordFor(model => model.changePassword.NewPassword)
                                            @Html.ValidationMessageFor(model => model.changePassword.NewPassword)
                                            @Html.ValidationMessage("error_loz")
                                        </div>
                                    </div>
                                    <br />

                                    <div class="form-group">
                                        <label class="col-md-3 control-label" for="promjena_lozinke_ponovljena">
                                            <mark>Ponovljena nova lozinka</mark>
                                        </label>
                                        <div id="promjena_lozinke_ponovljena" class="col-md-6">
                                            @Html.PasswordFor(model => model.changePassword.ConfirmPassword)
                                            @Html.ValidationMessageFor(model => model.changePassword.ConfirmPassword)
                                            @Html.ValidationMessage("error_loz")
                                        </div>
                                    </div>
                                    <br />
                                            @Html.HiddenFor(model => model.trenutniTab, new { id = "trenutniTab4" })
                                    <div class="col-md-2 mali-razmak-gore">
                                        <input onclick="dodajindex(4);" type="submit" class="btn btn-default prihvati" value="Promjeni &raquo;" /> <br />
                                    </div>
                                </form>
                            </fieldset>
                    }
                    </div>



                </div>
                <table style="visibility: hidden;">
                    <tbody id="postojeci-predmet-tr">
                        <tr>
                            <td>
                                <select class='predmet'>
                                            @foreach (var predmet in Model.mojeVlastiteInstrukcije.sviPredmeti) {
                                    <option value='@Html.Raw(predmet.ID_predmet.ToString())'>@Html.Raw(predmet.naziv_predmet)</option>
                                }
                                </select>
                            </td>
                            <td>

                                <input class='predmetCijena' type='number' min='0' step='0.01' placeholder='Cijena' required />
                            </td>
                            <td class="ajax-load-td">
                                <button class='btn btn-success btn-sm postojeciPohrani'>Pohrani</button><div class="ajax-load-add"><img class="img-responsive" src="~/Content/Images/ajax_load.gif" /></div>
                            </td>
                            <td></td>
                        </tr>


                    </tbody>
                </table>
                <table style="visibility: hidden;">
                    <tbody id="novi-predmet-tr" style="visibility: hidden;">
                        <tr>
                            <td>
                                <input class='predmetIme' type='text' maxlength='50' placeholder='Naziv predmeta' required />

                                <input class='predmetKratica' type='text' maxlength='10' placeholder='Kratica' required />
                                <input class='predmetOpis' type='text' maxlength='100' placeholder='Opis predmeta' required />
                                <select class='predmetKategorija'>
                                            @foreach (var kategorija in Model.mojeVlastiteInstrukcije.sveKategorije) {
                                    <option value='@Html.Raw(kategorija.ID_kategorija.ToString())'>@Html.Raw(kategorija.naziv_kategorija)</option>
                                }
                                </select>
                                <select class='predmetUstanova'>
                                            @foreach (var ustanova in Model.mojeVlastiteInstrukcije.sveUstanove) {
                                    <option value='@Html.Raw(ustanova.ID_ustanova.ToString())'>@Html.Raw(ustanova.Naziv_ustanova)</option>
                                }
                                </select>
                            </td>
                            <td>
                                <input class='predmetCijena' type='number' min='0' step='0.01' placeholder='Cijena' required />
                            </td>
                            <td class="ajax-load-td">
                                <button class='btn btn-success btn-sm predmetPohrani'>Pohrani</button><div class="ajax-load-add"><img class="img-responsive" src="~/Content/Images/ajax_load.gif" /></div>
                            </td>
                        </tr>
                    </tbody>
                </table>


                <div id="test123">

                </div>

                <script id="mapscript">
                    var maxIdkarte = 0;

                    function makeStruct(names) {
                        var names = names.split(' ');
                        var count = names.length;
                        function constructor() {
                            for (var i = 0; i < count; i++) {
                                this[names[i]] = arguments[i];
                                        }
                                        }
                        return constructor;
                                        }

                    var idmarkerKarta = makeStruct("id marker");
                var popismarkeranakarti = [];


                var mymap = L.map('mapid').setView([45.049222, 16.280702], 6);
                L.tileLayer('http://{s}.mqcdn.com/tiles/1.0.0/map/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="http://osm.org/copyright" title="OpenStreetMap" target="_blank">OpenStreetMap</a> contributors | Tiles Courtesy of <a href="http://www.mapquest.com/" title="MapQuest" target="_blank">MapQuest</a> <img src="http://developer.mapquest.com/content/osm/mq_logo.png" width="16" height="16">',
                    subdomains: ['otile1','otile2','otile3','otile4']
                }).addTo(mymap);
                mymap.addEventListener("click", kartaClick);

                function refreshmap(){
                    mymap.invalidateSize();
                }

                function kartaClick(e){
                    maxIdkarte += 1;
                    marker = L.marker([e.latlng.lat, e.latlng.lng], {title: "Lokacija šif. "+maxIdkarte} ).bindPopup("<p>Nedefinirano</p></br><input type='button' value='Ukloni lokaciju' class='marker-delete-button'/>");
                    marker.on("popupopen", onPopupOpen);
                    popismarkeranakarti.push(new idmarkerKarta(maxIdkarte, marker));
                    var mcontent = marker.getPopup().getContent();
                    mcontent = mcontent.substr(3);
                    mcontent = mcontent.substr(0, mcontent.indexOf("<"));
                    document.getElementById("popislokacija").innerHTML += '<li id="lilok'+maxIdkarte+'"><label id="labellok'+maxIdkarte+'" for="opislok'
                                    +maxIdkarte+'">Opis lokacije šif. '+maxIdkarte
                                        +' : </label><input type="text"  onchange="onmarkerchange(this)" id="opislok' +maxIdkarte+ '" value="'+mcontent+'">' + '</input></li>';
                    marker.addTo(mymap);
                }


                function onPopupOpen() {
                    var tempMarker = this;
                    $(".marker-delete-button:visible").on("click", function () {
                        for(var i = 0; i<popismarkeranakarti.length;i++){
                            if(popismarkeranakarti[i].marker == tempMarker){
                                var element = document.getElementById("lilok"+popismarkeranakarti[i].id);
                                element.parentElement.removeChild(element);
                                popismarkeranakarti.splice(i, 1);
                                break;
                            }
                        }
                        mymap.removeLayer(tempMarker);
                    });
                }

                function dodajlokacijeumodel(id){
                    dodajindex(id);
                    //var lok = makeStruct("lat lon opis id");
                    var listamarkera1 = makeStruct("lokacije");
                    listamarkera1.lokacije = [];
                    for (var i=0;i<popismarkeranakarti.length;i++){
                        var mcontent = popismarkeranakarti[i].marker.getPopup().getContent();
                        mcontent = mcontent.substr(3);
                        mcontent = mcontent.substr(0, mcontent.indexOf("<"));
                        listamarkera1.lokacije.push({lat: popismarkeranakarti[i].marker._latlng.lat, lon: popismarkeranakarti[i].marker._latlng.lng, opis: mcontent, id: popismarkeranakarti[i].id});
                    }
                    $("#jsonlokacije").val(JSON.stringify(listamarkera1.lokacije));

                }

                function mojelokacijeInit(){
                    var listamarkera = @Html.Raw(Json.Encode(Model.mojeVlastiteInstrukcije.MojeLokacijeJson));
                    listamarkera = JSON.parse(listamarkera );
                    for(var i = 0; i < listamarkera.lokacije.length; i++ ){
                        if(listamarkera.lokacije[i].id > maxIdkarte){
                            maxIdkarte = listamarkera.lokacije[i].id;
                        }
                        marker = L.marker([listamarkera.lokacije[i].lat, listamarkera.lokacije[i].lon], {title: "Lokacija šif. " + listamarkera.lokacije[i].id} ).bindPopup("<p>" + listamarkera.lokacije[i].opis + "</p></br><input type='button' value='Ukloni lokaciju' class='marker-delete-button'/>");
                        marker.on("popupopen", onPopupOpen);
                        document.getElementById("popislokacija").innerHTML += '<li id="lilok'+listamarkera.lokacije[i].id+'"><label id="labellok'+listamarkera.lokacije[i].id+'" for="opislok'+listamarkera.lokacije[i].id+'">Opis lokacije šif. '+listamarkera.lokacije[i].id+' : </label><input type="text" onchange="onmarkerchange(this)" id="opislok' +listamarkera.lokacije[i].id+ '" value="'+listamarkera.lokacije[i].opis +'">' + '</input></li>';

                        popismarkeranakarti.push(new idmarkerKarta(listamarkera.lokacije[i].id, marker));
                        marker.addTo(mymap);
                    }
                }

                function onmarkerchange(th){
                    for(var j = 0; j<popismarkeranakarti.length;j++){
                        if(popismarkeranakarti[j].id == th.id.substring(7, th.id.length)){
                            popismarkeranakarti[j].marker.getPopup().setContent('<p>'+th.value+'</p></br><input type="button" value="Ukloni lokaciju" class="marker-delete-button"/>');
                            var setopis = '<label id="labellok'+th.id.substring(7, th.id.length)+'" for="'+th.id+'">Opis lokacije šif. '+th.id.substring(7, th.id.length)+' : </label><input type="text" id="'+th.id+'" value="'+th.value+'">' + '</input>';
                            document.getElementById("lilok"+th.id.substring(7, th.id.length)).innerHTML = setopis;
                            break;
                        }
                    }
                }


                function provjeriJeLiMoguce(t){
                    if(t != null && t.value == 'true' && popismarkeranakarti.length == 0){
                        alert("Ukoliko želite biti instruktor morate dodati barem jednu lokaciju");
                        t.value = false;
                        t.checked = false;
                    }
                }


                </script>



            <script>
                //odabrani termini za model
                var dodanitermini;
                var dogovorenitermini;

                var idpocetkainstrukcija = [];


                $(document).ready(function () {
                    $("#tabledatainstruktori tbody tr").each(function( i ) {
                        var ident = $("td:first",this).attr('id');
                        var identbr = ident.substring(17, ident.length);
                        if($('#seenid' + identbr).siblings('label').html() == "Potvrdi"){
                            idpocetkainstrukcija.push(ident);
                        }
                    });
                    oznacipocetke();
                });

                function oznacipocetke(){
                    for(var i = 0; i<idpocetkainstrukcija.length;i++){
                        var identbr = idpocetkainstrukcija[i].substring(17, idpocetkainstrukcija[i].length);
                        trenutniVrijeme = ($("#pocetakinstruktor" + identbr).text()).trim();
                        trenutniDatum = trenutniVrijeme.substring(0, trenutniVrijeme.indexOf(" "));
                        trenutniVrijeme = trenutniVrijeme.substring(trenutniVrijeme.indexOf(" ")+1, trenutniVrijeme.length-6);
                        trenutniVrijeme = parseInt(trenutniVrijeme);
                        trenutniTrajanje = ($("#trajanjeinstruktor" + identbr).text()).trim().substr(0, ($("#trajanjeinstruktor" + identbr).text()).trim().length - 1).trim();
                        trenutniTrajanje = parseInt(trenutniTrajanje);
                        $("#tabledatainstruktori tbody tr").each(function( e ) {
                            var ident2 = $("td:first",this).attr('id');
                            var identbr2 = ident2.substring(17, ident2.length);
                            if(idpocetkainstrukcija[i] != ident2){
                                var test = ($("td:eq(1)",this).text()).trim();
                                var I = 0;
                                var t = document.getElementById("test123");
                                if(($("td:eq(5)",this).text()).trim() == "Termin je potvrđen"){
                                    var datumvrijeme = ($("td:first", this).text()).trim();
                                    var datum = datumvrijeme.substring(0, datumvrijeme.indexOf(" "));
                                    if(datum == trenutniDatum){
                                        var trajanje = ($("td:eq(1)",this).text()).trim().substr(0, ($("td:eq(1)",this).text()).trim().length -1);
                                        trajanje = parseInt(trajanje);
                                        var vrijeme  = datumvrijeme.substring(datumvrijeme.indexOf(" ")+1, datumvrijeme.length-6);
                                        vrijeme = parseInt(vrijeme);
                                        if((vrijeme<=trenutniVrijeme && vrijeme + trajanje > trenutniVrijeme)
                                            || (vrijeme<trenutniVrijeme+trenutniTrajanje && vrijeme + trajanje > trenutniVrijeme+trenutniTrajanje)
                                            || (trenutniVrijeme<=vrijeme && trenutniVrijeme + trenutniTrajanje > vrijeme)){
                                            $('#seenid' + identbr).siblings('label').css("color", "gray");
                                            $('#seenid' + identbr).attr("disabled", true);
                                        }
                                    }
                                }
                            }
                        });
                    }

                }



                //seen - skoro isto ko i odustani
                function seen(id){
                    var bal = $('#seenidstore' +id).val();
                    if($('#seenid' + id).siblings('label').html() !=  "Potvrdi"){
                        if($('#seenidstore' +id).val() == 'False'){
                            $('#seenid' + id).siblings('label').html('Viđeno');
                        }
                        else{
                            $('#seenid' + id).siblings('label').html('OK');
                        }
                    }
                    else{
                        if($('#seenidstore' +id).val() == 'False'){
                            if($('#hiddenodustani' +id).val() == 'True'){
                                $('#odustani'+id).click();
                            }
                        }
                    }

                    if($('#seenidstore' +id).val() == 'False'){
                        $('#seenidstore' +id).val("True");
                    }
                    else{
                        $('#seenidstore' +id).val("False");
                    }
                    provjeriOstale(id);
                }


                function provjeriOstale(id){
                    trenutniVrijeme = ($("#pocetakinstruktor" + id).text()).trim();
                    trenutniDatum = trenutniVrijeme.substring(0, trenutniVrijeme.indexOf(" "));
                    trenutniVrijeme = trenutniVrijeme.substring(trenutniVrijeme.indexOf(" ")+1, trenutniVrijeme.length-6);
                    trenutniVrijeme = parseInt(trenutniVrijeme);
                    trenutniTrajanje = ($("#trajanjeinstruktor" + id).text()).trim().substr(0, ($("#trajanjeinstruktor" + id).text()).trim().length - 1).trim();
                    trenutniTrajanje = parseInt(trenutniTrajanje);
                    $("#tabledatainstruktori tbody tr").each(function( i ) {

                        var ident = $("td:first",this).attr('id');
                        var identbr = ident.substring(17, ident.length);
                        if(ident != "pocetakinstruktor" + id){
                            if($('#seenid' + identbr).siblings('label').html() == "Potvrdi"){
                                if($('#seenidstore' +identbr).val() == 'True'){
                                    var datumvrijeme = ($("td:first", this).text()).trim();
                                    var datum = datumvrijeme.substring(0, datumvrijeme.indexOf(" "));
                                    if(datum == trenutniDatum){
                                        var trajanje = ($("td:eq(1)",this).text()).trim().substr(0, ($("td:eq(1)",this).text()).trim().length -1);
                                        trajanje = parseInt(trajanje);
                                        var vrijeme  = datumvrijeme.substring(datumvrijeme.indexOf(" ")+1, datumvrijeme.length-6);
                                        vrijeme = parseInt(vrijeme);
                                        if((vrijeme<=trenutniVrijeme && vrijeme + trajanje > trenutniVrijeme)
                                            || (vrijeme<trenutniVrijeme+trenutniTrajanje && vrijeme + trajanje > trenutniVrijeme+trenutniTrajanje)
                                            || (trenutniVrijeme<=vrijeme && trenutniVrijeme + trenutniTrajanje > vrijeme)){
                                            $('#seenid' + identbr).click();
                                        }
                                    }
                                }
                            }
                        }
                    });
                }

                //odustani od dogovorenog termina
                function odustani(id){
                    var b = $('#hiddenodustani' +id).val();
                    if($('#hiddenodustani' +id).val() == 'True'){
                        $('#hiddenodustani' +id).val("False");
                    }
                    else{
                        $('#hiddenodustani' +id).val("True");
                        if($('#seenid' + id).siblings('label').html() ==  "Potvrdi"){
                            if($('#seenidstore' +id).val() == 'True'){
                                $('#seenid' + id).click();
                            }
                        }
                    }
                }

                //index taba gdje je kliknut submit
                function dodajindex(id){
                    $('#trenutniTab' +id).val(id);
                }


                //tekst termina: Slobodno/Zauzeto
                function oznaciTermine(){
                    for(var i =0; i < dodanitermini.length; i++){
                        $("#" + dodanitermini[i]).prop("checked", true);
                        $('#' + dodanitermini[i]).siblings('label').html('Odabrano');
                    }
                }


                //interakcija sa tablicom termina
                jQuery(document).ready(function () {
                    var rows = " ";
                    var col = " ";
                    for(var i = 0; i <= 23; i++){
                        rows = rows + '<tr><td><div class="redrazmak"><b>'+i+'h    '+'</b></div></td>';
                        col = " ";
                        for (var j = 1; j <= 7; j++) {
                            col = col + '<td><div class="redrazmak ">'
                                + '<input id="' + (100*j + i) + '" type="checkbox" class="mycheck" name="' + (100*j + i) + '" onclick="changeText(this.id);"/>'
                                    + '<label class="mylabel" for="' + (100*j + i) + '">'
                                        + 'Slobodno'
                                    + '</label>'
                                + '</div></td>';
                        }
                        rows = rows + col;
                        rows = rows + '</tr>';
                    }
                    document.getElementById("tableT").innerHTML = rows;
                    dodanitermini = @Html.Raw(Json.Encode(Model.mojeVlastiteInstrukcije.mojiTermini));
                    //document.getElementById("test123").innerHTML = dodanitermini;
                    oznaciTermine();
                    nots();
                    mojelokacijeInit();
                    setTimeout(refreshmap, 250);
                });

                //pocetni tab
                function activaTab(tab) {
                    $('#myTab a[href="#' + tab + '"]').tab('show');
                };
                function activaSubTab1(tab) {
                    $('#myTabDogovoreno a[href="#' + tab + '"]').tab('show');
                };
                function activaSubTab2(tab) {
                    $('#myTabTermini a[href="#' + tab + '"]').tab('show');
                };

                $(document).ready(function () {
                    var id=@Html.Raw(Model.trenutniTab);
                    if(id == "11" || id == "12"){
                        activaTab('tab' + 1);
                        activaSubTab1('tab' + id);
                    }
                    else if(id == "21" || id == "22"){
                        activaTab('tab' + 2);
                        activaSubTab2('tab' + id);
                    }
                    else{
                        activaTab('tab' + id);
                    }
                });


                //interakcija sa tablicom termina
                function changeText(id) {
                    if ($('#' + id).is(':checked')) {
                        $('#' + id).siblings('label').html('Odabrano');
                        dodajtermin(id);
                    } else {
                        $('#' + id).siblings('label').html('Slobodno');
                        uklonitermin(id);
                    }
                }


                //dodavanje termina u popis
                function dodajtermin(id) {
                    dodanitermini.push(id);
                }
                //uklanjanje termina sa popisa
                function uklonitermin(id) {
                    for (var i = 0; i < dodanitermini.length; i++) {
                        if (dodanitermini[i] == id) {
                            dodanitermini.splice(i, 1);
                            break;
                        }
                    }
                }


                //dodavanje termina u model
                function addterminmodel(id) {
                    dodajindex(id);
                    $("#hiddenstateid").val(dodanitermini);
                }




            </script>
            <script>
                $(document).on('click', '.Delete', function(e){
                    e.preventDefault();

                    var $el = $(this);
                    $edit = $el.closest("tr").find(".Edit");
                    $ajaxLoad = $el.closest("tr").find(".ajax-load");
                    swal({
                        title: "Brisanje predmeta",
                        text: "Jeste li sigurni da želite obrisati predmet?",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: "btn-danger",
                        confirmButtonText: "Da, obriši predmet!",
                        cancelButtonText: "Ne, Otkaži brisanje!",
                        closeOnConfirm: false,
                        closeOnCancel: false
                    },
                    function(isConfirm) {
                        if (isConfirm) {
                            $el.prop("disabled", true);
                            $edit.prop("disabled", true);
                            $ajaxLoad.fadeIn(300);

                            $.ajax({
                                url: '/Profil/Delete',
                                type: 'POST',
                                async: true,
                                data: {id: $el.attr("value") },
                                error: function(){
                                    $el.prop("disabled", false);
                                    $edit.prop("disabled", false);
                                    swal("Greška!", "Greška pri brisanju predmeta.", "error")
                                    $ajaxLoad.fadeOut(300);
                                },
                                success: function () {
                                    swal("Obrisano", "Predmet je obrisan.", "success");
                                    $el.closest("tr").fadeOut(200);
                                }
                            });

                        } else {
                            swal("Otkazano", "Predmet je siguran :)", "error");
                            $ajaxLoad.fadeOut(300);
                            $el.prop("disabled", false);
                            $edit.prop("disabled", false);
                        }
                    });

                });
            </script>

            <script>
                $(".dodajNovi").click(function(e){
                    e.preventDefault();
                    $noviPredmet = $("#novi-predmet-tr > tr");
                    $("#predmeti").append($noviPredmet.clone(true));

                });
            </script>


            <script>
                $(".dodajPostojeci").click(function(e){
                    e.preventDefault();
                    $postojeciPredmet = $("#postojeci-predmet-tr > tr");
                    $("#predmeti").append($postojeciPredmet.clone(true));

                });
            </script>

            <script>
                $(document).on('click', '.predmetPohrani', function(e){
                    e.preventDefault();
                    var tr = $(this).closest("tr");
                    nazivPredmeta = tr.find(".predmetIme").val();
                    cijenaPredmeta = tr.find(".predmetCijena").val();
                    if(nazivPredmeta.length <= 0 || cijenaPredmeta.length <= 0){
                        swal("Neispravni podatci", "Unesite ime predmeta i cijenu", "error");
                        return;
                    }
                    else if(parseFloat(cijenaPredmeta).toFixed(2) < 0.00 || parseFloat(cijenaPredmeta).toFixed(2) > 9999.99){

                        swal("Neispravni podatci", "Cijena mora biti između 0 i 9999.99 HRK", "error");
                        return;
                    }
                    $button = $(this);
                    ajaxLoad = tr.find(".ajax-load-add");
                    $edit = $button.closest("tr").find(".Edit");
                    $button.prop("disabled", true);
                    $edit.prop("disabled", true);
                    ajaxLoad.fadeIn(300);

                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "/Profil/Insert",
                        //    string nazivPredmet, string kraticaPredmet, string opisPredmet, string IDUstanova, string IDKategorija, string cijenaPredmet

                        data: JSON.stringify({
                            nazivPredmet: nazivPredmeta,
                            kraticaPredmet: tr.find(".predmetKratica").val(),
                            opisPredmet: tr.find(".predmetOpis").val(),
                            IDUstanova: tr.find(".predmetUstanova").val(),
                            IDKategorija: tr.find(".predmetKategorija").val(),
                            cijenaPredmet: cijenaPredmeta
                        }),
                        success: function(res){
                            if(res == null){
                                //internal error

                                swal("Greška!", "Greška pri stvaranju novog predmeta.", "error")
                                $button.prop("disabled", false);
                                $edit.prop("disabled", false);
                                ajaxLoad.fadeOut(300);

                            }
                            else{
                                tr.empty();
                                tr.append("<td>" +nazivPredmeta +"</td><td>" + parseFloat(cijenaPredmeta).toFixed(2) + " HRK</td>" + "<td><button class='btn btn-sm btn-danger Delete' value='" + res + "' > Ukloni </button></td><td class='ajax-load-td'><button class='btn btn-sm btn-warning Edit' value='" + res + "' > Uredi </button><div class='ajax-load'><img class='img-responsive' src='/Content/Images/ajax_load.gif' /></div></td>");
                            }
                        }
                    });
                });
            </script>

            <script>
                $(document).on('click', '.postojeciPohrani', function(e){
                    e.preventDefault();
                    var tr = $(this).closest("tr");
                    cijenaPredmet = tr.find(".predmetCijena").val();
                    if(cijenaPredmet.length <= 0){

                        swal("Neispravni podatci", "Molimo unesite cijenu predmeta", "error")
                        return;
                    }else if(parseFloat(cijenaPredmet).toFixed(2) < 0.00 || parseFloat(cijenaPredmet).toFixed(2) > 9999.99){


                        swal("Neispravni podatci", "Cijena mora biti između 0 i 9999.99 HRK", "error");
                        return;
                    }
                    ajaxLoad = tr.find(".ajax-load-add");
                    ajaxLoad.fadeIn(300);
                    $button = $(this);
                    $(this).prop("disabled", true);
                    combobox = tr.find(".predmet");
                    idPredmeta = combobox.val();
                    nazivPredmeta = combobox.html();

                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "/Profil/InsertExisting",

                        data: JSON.stringify({
                            IDPredmet: tr.find(".predmet").val(),
                            cijenaPredmet: tr.find(".predmetCijena").val()
                        }),


                        success: function(res){
                            if(parseInt(res) == -1){
                                swal("Duplikat", "Već držite instrukcije za odabrani predmet.", "error");
                                $button.prop("disabled", false);
                                ajaxLoad.fadeOut(300);

                            }
                            else if(!res){
                                //internal error
                                swal("Greška!", "Greška pri dodavanju predmeta.", "error")
                                $button.prop("disabled", false);
                                ajaxLoad.fadeOut(300);
                            }
                            else{
                                tr.empty();
                                tr.append("<td>" +res +"</td><td>" + parseFloat(cijenaPredmet).toFixed(2) + " HRK</td>" + "<td><button class='btn btn-sm btn-danger Delete' value='" + idPredmeta + "' > Ukloni </button></td><td class='ajax-load-td'><button class='btn btn-sm btn-warning Edit' value='" + idPredmeta + "' > Uredi </button><div class='ajax-load'><img class='img-responsive' src='/Content/Images/ajax_load.gif' /></div></td>");
                            }
                        }
                    });

                });
            </script>
            <script>
                $(document).on('click', '.Edit', function(e){
                    e.preventDefault();
                    idPredmet = $(this).attr("value");
                    $(this).prop("disabled", true);
                    var tr = $(this).closest("tr");
                    var tdCijena = tr.children().eq(1);
                    tdCijena.append("&nbsp;<input class='novaCijena' type='number' lang='nb' min='0' step='0.01' placeholder='Nova cijena'/>&nbsp;<button class='btn btn-sm btn-success PohraniCijenu' value='" + idPredmet + "'>Pohrani</button><div class='ajax-load-edit'><img class='img-responsive' src='/Content/Images/ajax_load.gif' /></div>");

                });
            </script>

            <script>
                $(document).on('click', '.PohraniCijenu', function(e){
                    e.preventDefault();
                    var td = $(this).parent();
                    var tr = $(this).closest("tr");
                    var $delButton = tr.find(".Delete");
                    var ajaxLoad = tr.find(".ajax-load-edit");
                    var novaCijena = tr.find(".novaCijena").val();
                    var idPredmet = $(this).attr("value");
                    var $savechangeButton = $(this);
                    var $editButton = tr.find(".Edit");


                    if(novaCijena.length <= 0){
                        swal("Neispravni podatci", "Unesite cijenu", "error");
                        return;
                    }else if(parseFloat(novaCijena).toFixed(2) < 0.00 || parseFloat(novaCijena).toFixed(2) > 9999.99){

                        swal("Neispravni podatci", "Cijena mora biti između 0 i 9999.99 HRK", "error");
                        return;
                    }

                    td.css("display", "-webkit-box");
                    ajaxLoad.fadeIn(300);
                    $delButton.prop("disabled", true);
                    $savechangeButton.prop("disabled", true);

                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "/Profil/UpdatePrice",

                        data: JSON.stringify({
                            IDPredmet: idPredmet,
                            cijenaPredmet: tr.find(".novaCijena").val()
                        }),
                        success: function(res){
                            if(!res){
                                //internal error
                                swal("Greška!", "Greška pri promjeni cijene.", "error")
                                ajaxLoad.fadeOut(50);
                                $savechangeButton.prop("disabled", false);
                            }
                            else{
                                td.empty();
                                td.append(parseFloat(novaCijena).toFixed(2) + " HRK");
                                $editButton.prop("disabled", false);

                            }
                            td.css("display", "table-cell");
                            $delButton.prop("disabled", false);
                        }
                    });

                });
            </script>


        </div>
    </div>
</body>
</html>

@section Scripts {

    @Scripts.Render("~/bundles/jquery_tablesorter")
    @*@Styles.Render("~/Content/css_jquery_tablesorter")*@

    <script type="text/javascript">
        $(document).ready(function () {
            $("#dogovori1").tablesorter();
        }
    );
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#dogovori2").tablesorter();
        }
    );
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#predmeti1").tablesorter();
        }
    );
    </script>

}
